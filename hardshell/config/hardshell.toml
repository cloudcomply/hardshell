[global]
system_type = "server" # server | desktop
server_role = ""

[global.package.manager]
amzn.manager = 'dnf'
amzn.installed = ['dnf', 'list', '--installed']
amzn.uninstall = ['dnf', 'remove']
centos.manager = 'yum'
centos.installed = ['yum', 'list']
centos.uninstall = ['yum', 'remove']
debian.manager = 'apt'
debian.installed = ['apt', 'list']
debian.uninstall = ['apt', 'remove']
fedora.manager = 'dnf'
fedora.installed = ['dnf', 'list', '--installed']
fedora.uninstall = ['dnf', 'remove']
rhel.manager = ''
rhel.installed = []
rhel.uninstall = []
sles.manager = ''
sles.installed = []
sles.uninstall = []
ubuntu.manager = 'apt'
ubuntu.installed = ['apt', 'list']
ubuntu.uninstall = ['apt', 'remove']

[packages]
category_audit = true
category_harden = true
category_name = "Packages"

[packages.gpg]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Gpg"

[packages.audit]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Audit"

[packages.audit.audit]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package audit"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "audit"
package_install = true

[packages.audit.auditd]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package auditd"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "auditd"
package_install = true

[packages.audit.audispd-plugins]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package audispd-plugins"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "audispd-plugins"
package_install = true

[packages.client]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Client"

[packages.client.openldap-clients]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package openldap-clients"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "openldap-clients"
package_install = false

[packages.client.ldap-utils]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package ldap-utils"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "ldap-utils"
package_install = false

[packages.client.telnet]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package telnet"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "telnet"
package_install = false

[packages.desktop]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Desktop"

[packages.firewall]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Firewall"

[packages.firewall.nftables]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package nftables"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "nftables"
package_install = true

[packages.log]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Log"

[packages.log.rsyslog]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package rsyslog"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "rsyslog"
package_install = true

[packages.log.systemd-journal-remote]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package systemd-journal-remote"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "systemd-journal-remote"
package_install = true

[packages.security]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Security"

[packages.security.aide]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package aide"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "aide"
package_install = true

[packages.security.authselect]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package authselect"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "authselect"
package_install = true

[packages.security.libselinux]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package libselinux"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "libselinux"
package_install = true

[packages.security.libselinux1]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package libselinux1"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "libselinux1"
package_install = false

[packages.security.apparmor]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package apparmor"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "apparmor"
package_install = false

[packages.security.sudo]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package sudo"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "sudo"
package_install = true

[packages.security.crypto_policies]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package crypto-policies"
check_type = "package"
check_os = { amzn = ["2023"] }
# check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "crypto-policies"
package_install = true

[packages.service]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Service"

[packages.service.at]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package at"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "at"
package_install = true

[packages.service.avahi]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package avahi"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "avahi"
package_install = false

[packages.service.avahi-daemon]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package avahi-daemon"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "avahi-daemon"
package_install = false

[packages.service.bind]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package bind"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "bind"
package_install = false

[packages.service.bind9]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package bind9"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "bind9"
package_install = false

[packages.service.cronie]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package cronie"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "cronie"
package_install = true

[packages.service.cron]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package cron"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "cron"
package_install = true

[packages.service.cups]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package cups"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "cups"
package_install = false

[packages.service.dnsmasq]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package dnsmasq"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "dnsmasq"
package_install = false

[packages.service.dovecot]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package dovecot"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "dovecot"
package_install = false

[packages.service.dovecot-pop3d]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package dovecot-pop3d"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "dovecot-pop3d"
package_install = false

[packages.service.httpd]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package httpd"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "httpd"
package_install = false

[packages.service.apache2]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package apache2"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "apache2"
package_install = false

[packages.service.mcstrans]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package mcstrans"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "mcstrans"
package_install = false

[packages.service.net-snmp]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package net-snmp"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "net-snmp"
package_install = false

[packages.service.snmp]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package snmp"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "snmp"
package_install = false

[packages.service.openssh-server]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package openssh-server"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "openssh-server"
package_install = true

[packages.service.rpcbind]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package rpcbind"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "rpcbind"
package_install = false

[packages.service.rsync]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package rsync"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "rsync"
package_install = false

[packages.service.samba]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package samba"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "samba"
package_install = false

[packages.service.squid]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package squid"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "squid"
package_install = false

[packages.service.nginx]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package nginx"
check_type = "package"
check_os = { amzn = ["2023"] }
package_name = "nginx"
package_install = false

[packages.service.nginx-core]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package nginx-core"
check_type = "package"
check_os = { ubuntu = ["22.04"] }
package_name = "nginx-core"
package_install = false

[packages.service.vsftpd]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package vsftpd"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "vsftpd"
package_install = false

[packages.time]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Time"

[packages.time.chrony]
check_audit = true
check_harden = true
check_id = ""
check_name = "Package chrony"
check_type = "package"
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
package_name = "chrony"
package_install = true

[kernel]
category_audit = true
category_harden = true
category_name = "Kernel"

[kernel.filesystem]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Filesystem"

[kernel.filesystem.cramfs]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem cramfs"
check_type = "filesystem"
module_name = "cramfs"

[kernel.filesystem.fat]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem fat"
check_type = "filesystem"
module_name = "fat"

[kernel.filesystem.freevxfs]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem freevxfs"
check_type = "filesystem"
module_name = "freevxfs"

[kernel.filesystem.gfs2]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem gfs2"
check_type = "filesystem"
module_name = "gfs2"

[kernel.filesystem.hfs]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem hfs"
check_type = "filesystem"
module_name = "hfs"

[kernel.filesystem.hfsplus]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem hfsplus"
check_type = "filesystem"
module_name = "hfsplus"

[kernel.filesystem.jffs2]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem jffs2"
check_type = "filesystem"
module_name = "jffs2"

[kernel.filesystem.nfs]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem nfs"
check_type = "filesystem"
module_name = "nfs"

[kernel.filesystem.nfsv3]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem nfsv3"
check_type = "filesystem"
module_name = "nfsv3"

[kernel.filesystem.squashfs]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"] }
check_name = "Filesystem squashfs"
check_type = "filesystem"
module_name = "squashfs"

[kernel.filesystem.udf]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem udf"
check_type = "filesystem"
module_name = "udf"

[kernel.filesystem.usb-storage]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem usb-storage"
check_type = "filesystem"
module_name = "usb-storage"

[kernel.filesystem.vfat]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Filesystem vfat"
check_type = "filesystem"
module_name = "vfat"

[kernel.module]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Module"

[kernel.module.dccp]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "dccp"
check_type = "module"
module_name = "dccp"

[kernel.module.rds]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "rds"
check_type = "module"
module_name = "rds"

[kernel.module.sctp]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "sctp"
check_type = "module"
module_name = "sctp"

[kernel.module.tipc]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "tipc"
check_type = "module"
module_name = "tipc"

[system]
category_audit = true
category_harden = true
category_name = "System"

[system.ssh]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "SSH"
sub_category_file1 = "/etc/ssh/sshd_config"
sub_category_file2 = '/etc/ssh/sshd_config.d/*.conf'
sub_category_file3 = '/etc/ssh/sshd_config.d'
service_name = "sshd"
base_dir = "/etc/ssh"
base_path = "/etc/ssh"
prefix = "sshd_config"
suffix = ".conf"

[system.ssh.sshd_config]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Permissions sshd_config"
check_type = "perms"
path = "/etc/ssh/sshd_config"
permissions = "600"
owner = "0"
group = "0"

[system.ssh.private_hosts]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Permissions Private Host key files"
check_type = "keys"
file_type = "private key"
permissions = "600"
owner = "0"
group = "0"

[system.ssh.public_hosts]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Permissions Public Host key files"
check_type = "keys"
file_type = "public key"
permissions = "644"
owner = "0"
group = "0"

[system.ssh.crypto_policy]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Crypto Policy Override"
check_type = ""

[system.ssh.strong_ciphers]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Strong Ciphers"
check_type = ""

[system.ssh.strong_mac]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Strong MAC Algorithms"
check_type = ""

[system.ssh.strong_kex]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Strong Key Exchange Algorithms"
check_type = ""

[system.ssh.limit_access]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Limit Access"
check_type = "regex"
pattern = "^(?i:AllowUsers|AllowGroups|DenyUsers|DenyGroups)\\s+\\S+$"
# setting = "AllowUsers <userlist>"
# setting = "AllowGroups <grouplist>"
# setting = "DenyUsers <userlist>"
# setting = "DenyGroups <grouplist>"

[system.ssh.allow_tcp_forwarding]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "AllowTcpForwarding"
check_type = "regex"
pattern = "^\\s*(?i:AllowTcpForwarding)\\s+no\\b"
setting = "AllowTcpForwarding no"

[system.ssh.banner]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Banner"
check_type = "regex"
pattern = "^\\s*(?i:Banner)\\s+/etc/issue\\.net\\b"
setting = "Banner /etc/issue.net"

[system.ssh.client_alive_max]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "ClientAliveCountMax"
check_type = "regex"
pattern = "^\\s*(?i:ClientAliveCountMax)\\s+[1-9][0-9]*\\b"
setting = "ClientAliveCountMax 3"

[system.ssh.client_alive_interval]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "ClientAliveInterval"
check_type = "regex"
pattern = "^\\s*(?i:ClientAliveInterval)\\s+[1-9][0-9]*\\b"
setting = "ClientAliveInterval 15"

[system.ssh.host_based_auth]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "HostbasedAuthentication"
check_type = "regex"
pattern = "^\\s*(?i:HostbasedAuthentication)\\s+no\\b"
setting = "HostbasedAuthentication no"

[system.ssh.ignore_rhosts]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "IgnoreRhosts"
check_type = "regex"
pattern = "^\\s*(?i:IgnoreRhosts)\\s+yes\\b"
setting = "IgnoreRhosts yes"

[system.ssh.login_grace_time]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "LoginGraceTime"
check_type = "regex"
pattern = "^(?i:LoginGraceTime)\\s+([1-9]|[1-5][0-9]|60)\\b"
setting = "LoginGraceTime 60"

[system.ssh.log_level]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "LogLevel"
check_type = "regex"
pattern = "^\\s*(?i:LogLevel)\\s+(VERBOSE|INFO)\\b"
setting = "LogLevel INFO"

[system.ssh.max_auth_tries]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "MaxAuthTries"
check_type = "regex"
pattern = "^(?i:MaxAuthTries)\\s+([1-4])\\b"
setting = "MaxAuthTries 4"

[system.ssh.max_sessions]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "MaxSessions"
check_type = "regex"
pattern = "^(?i:MaxSessions)\\s+([1-9]|10)\\b"
setting = "MaxSessions 10"

[system.ssh.max_startups]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "MaxStartups"
check_type = "regex"
pattern = "^(?i:MaxStartups)\\s+([0-9]|10):([1-2]?[0-9]|30):([1-5]?[0-9]|60)\\b"
setting = "MaxStartups 10:30:60"

[system.ssh.permit_empty_passwords]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "PermitEmptyPasswords"
check_type = "regex"
pattern = "^\\s*(?i:PermitEmptyPasswords)\\s+no\\b"
setting = "PermitEmptyPasswords no"

[system.ssh.permit_root_login]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "PermitRootLogin"
check_type = "regex"
pattern = "^\\s*(?i:PermitRootLogin)\\s+no\\b"
setting = "PermitRootLogin no"

[system.ssh.permit_user_env]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "PermitUserEnvironment"
check_type = "regex"
pattern = "^\\s*(?i:PermitUserEnvironment)\\s+no\\b"
setting = "PermitUserEnvironment no"

[system.ssh.use_pam]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "UsePAM"
check_type = "regex"
pattern = "^\\s*(?i:UsePAM)\\s+yes\\b"
setting = "UsePAM yes"

[system.ssh.x11_forwarding]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "X11Forwarding"
check_type = "regex"
pattern = "^\\s*(?i:X11Forwarding)\\s+no\\b"
setting = "X11Forwarding no"

[system.sudo]
sub_category_audit = true
sub_category_harden = true
sub_category_name = "Sudo"
sub_category_file1 = "/etc/sudoers"
sub_category_file2 = '/etc/sudoers.d/*'
sub_category_file3 = ''
# config = "/etc/sudo.config"
base_path = "/etc"
prefix = "sudoers"
suffix = ""

[system.sudo.use_pty]
check_audit = true
check_harden = true
check_id = ""
check_os = { amzn = ["2023"], ubuntu = ["22.04"] }
check_name = "Defaults use_pty"
check_type = "regex"
path = "/etc/sudoers"
pattern = "^(?i:Defaults)\\s+use_pty$"
setting = "Defaults use_pty"

[accounts]
[accounts.0001a]
category   = "accounts"
check_name = "accounts"
check_skip = false
check_type = "accounts"
valid_os   = ["amzn-2023", "ubuntu-22.04", "ubuntu-24.04"]

[accounts.0002a]
category      = "accounts"
check_name    = "default user inactive setting"
check_skip    = false
check_type    = "regex"
ignore_case   = true
path          = "/etc/default/useradd"
pattern       = "^INACTIVE\\s+=\\s+30"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[accounts.0003a]
category      = "accounts"
check_name    = "current user inactive setting"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = true
path          = "/etc/shadow"
pattern       = "^[^:]+:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:30:"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[aide]
[aide.0001a]
category          = "aide"
check_name        = "aide package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "aide"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[aide.0002a]
category    = "aide"
check_name  = "aidecheck service"
check_skip  = false
check_type  = "unit"
unit_active = false
unit_loaded = true
unit_name   = "aidecheck.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[aide.0003a]
category    = "aide"
check_name  = "aidecheck timer"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "aidecheck.timer"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[aide.0004a]
category    = "aide"
check_name  = "aidecheck service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/aidecheck.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[aide.0005a]
category    = "aide"
check_name  = "aidecheck timer file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/aidecheck.timer"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[aide.0006a]
category      = "aide"
check_name    = "aide.conf integrity"
check_skip    = false
check_subtype = "aide"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^/sbin/(auditctl|auditd|ausearch|aureport|autrace|augenrules) p\\+i\\+n\\+u\\+g\\+s\\+b\\+acl\\+xattrs\\+sha512$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[at]
[at.0001a]
category          = "at"
check_name        = "at package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "at"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[at.0002a]
category    = "at"
check_name  = "atd service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "atd.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[at.0003a]
category    = "at"
check_name  = "atd service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/atd.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[at.0004a]
category    = "at"
check_name  = "at allow list"
check_skip  = false
check_type  = "path"
path        = "/etc/at.allow"
path_exists = true
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[at.0005a]
category    = "at"
check_name  = "at deny list"
check_skip  = false
check_type  = "path"
path        = "/etc/at.deny"
path_exists = false
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[audit]
[audit.0001a]
category          = "audit"
check_name        = "audit package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "audit"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[audit.0002a]
category    = "audit"
check_name  = "auditd service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "auditd.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[audit.0003a]
category    = "audit"
check_name  = "auditd service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/auditd.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[authselect]
[authselect.0001a]
category          = "authselect"
check_name        = "authselect package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "authselect"
valid_os          = ["amzn-2023"]

[avahi]
[avahi.0001a]
category          = "avahi"
check_name        = "avahi package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "avahi"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[avahi.0002a]
category        = "avahi"
check_name      = "avahi daemon service"
check_skip      = false
check_type      = "service"
service_active  = false
service_enabled = false
service_masked  = false
service_name    = "avahi-daemon.service"
valid_os        = ["amzn-2023", "ubuntu-22.04"]

[avahi.0003a]
category        = "avahi"
check_name      = "avahi daemon socket"
check_skip      = false
check_type      = "service"
service_active  = false
service_enabled = false
service_masked  = false
service_name    = "avahi-daemon.socket"
valid_os        = ["amzn-2023", "ubuntu-22.04"]

[avahi.0004a]
category    = "avahi"
check_name  = "avahi daemon service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/avahi-daemon.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[avahi.0005a]
category    = "avahi"
check_name  = "avahi daemon socket file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/avahi-daemon.socket"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[banner]
[banner.0001a]
category    = "banner"
check_name  = "issue file"
check_skip  = false
check_type  = "path"
path        = "/etc/issue"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[banner.0002a]
category    = "banner"
check_name  = "issue.net file"
check_skip  = false
check_type  = "path"
path        = "/etc/issue.net"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[banner.0003a]
category    = "banner"
check_name  = "motd file"
check_skip  = false
check_type  = "path"
path        = "/etc/motd"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[bind]
[bind.0001a]
category          = "bind"
check_name        = "bind package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "bind"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[bootloader]
[bootloader.0001a]
category    = "bootloader"
check_files = true
check_name  = "bootloader bios files"
check_skip  = false
check_type  = "path"
path        = "/boot/grub2"
path_exists = true
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[bootloader.0002a]
category    = "bootloader"
check_files = false
check_name  = "bootloader efi files"
check_skip  = false
check_type  = "path"
path        = "/boot/efi/EFI"
path_exists = true
permissions = [0, 0, 700]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[chrony]
[chrony.0001a]
category          = "chrony"
check_name        = "chrony package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "chrony"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[chrony.0002a]
category    = "chrony"
check_name  = "chronyd service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "chronyd.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[chrony.0003a]
category    = "chrony"
check_name  = "chronyd service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/chronyd.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[chrony.0004a]
category      = "chrony"
check_name    = "chrony configured"
check_skip    = false
check_subtype = "chrony"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = true
pattern       = "^\\s*(server|pool)\\s+[^#\\n\\r]+"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[coredump]
[coredump.0001a]
category      = "coredump"
check_name    = "coredump backtraces disabled"
check_skip    = false
check_subtype = "coredump"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^ProcessSizeMax\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[coredump.0002a]
category      = "coredump"
check_name    = "coredump storage disabled"
check_skip    = false
check_subtype = "coredump"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^Storage\\s*=\\s*none\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron]
[cron.0001a]
category          = "cron"
check_name        = "cronie package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "cronie"
valid_os          = ["amzn-2023"]

[cron.0002a]
category    = "cron"
check_name  = "crond service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "crond.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0003a]
category    = "cron"
check_name  = "crond service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/crond.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0004a]
category    = "cron"
check_name  = "cron allow list"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.allow"
path_exists = true
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0005a]
category    = "cron"
check_name  = "cron deny list"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.deny"
path_exists = false
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0006a]
category    = "cron"
check_name  = "cron.d directory"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.d"
path_exists = true
permissions = [0, 0, 700]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0007a]
category    = "cron"
check_name  = "cron.daily directory"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.daily"
path_exists = true
permissions = [0, 0, 700]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0008a]
category    = "cron"
check_name  = "cron.hourly directory"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.hourly"
path_exists = true
permissions = [0, 0, 700]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0009a]
category    = "cron"
check_name  = "cron.monthly directory"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.monthly"
path_exists = true
permissions = [0, 0, 700]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0010a]
category    = "cron"
check_name  = "cron.weekly directory"
check_skip  = false
check_type  = "path"
path        = "/etc/cron.weekly"
path_exists = true
permissions = [0, 0, 700]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cron.0011a]
category    = "cron"
check_name  = "crontab file"
check_skip  = false
check_type  = "path"
path        = "/etc/crontab"
path_exists = true
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[crypto]
[crypto.0001a]
category      = "crypto"
check_name    = "system-wide crypto policy not legacy"
check_skip    = false
check_subtype = "crypto"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*DEFAULT\\s*(#.*)?$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[cups]
[cups.0001a]
category          = "cups"
check_name        = "cups package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "cups"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[dnsmasq]
[dnsmasq.0001a]
category          = "dnsmasq"
check_name        = "dnsmasq package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "dnsmasq"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[dovecot]
[dovecot.0001a]
category          = "dovecot"
check_name        = "dovecot package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "dovecot"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[firewalld]
[firewalld.0001a]
category          = "firewalld"
check_name        = "firewalld package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "firewalld"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[firewalld.0002a]
category    = "firewalld"
check_name  = "firewalld service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "firewalld.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[firewalld.0003a]
category    = "firewalld"
check_name  = "firewalld service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/firewalld.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[gpg]
[gpg.0001a]
category      = "gpg"
check_name    = "gpgcheck enabled globally"
check_skip    = false
check_subtype = "gpg"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^gpgcheck\\s*=\\s*1"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[httpd]
[httpd.0001a]
category          = "httpd"
check_name        = "httpd package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "httpd"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[ipv4]
[ipv4.0001a]
category      = "ipv4"
check_name    = "ipv4 bogus icmp responses ignored"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.icmp_ignore_bogus_error_responses = 1"
pattern       = "^net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0002a]
category      = "ipv4"
check_name    = "ipv4 broadcast icmp requests ignored"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.icmp_echo_ignore_broadcasts = 1"
pattern       = "^net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0003a]
category      = "ipv4"
check_name    = "ipv4 icmp redirects not accepted (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.all.accept_redirects = 0"
pattern       = "^net\\.ipv4\\.conf\\.all\\.accept_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0004a]
category      = "ipv4"
check_name    = "ipv4 icmp redirects not accepted (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.default.accept_redirects = 0"
pattern       = "^net\\.ipv4\\.conf\\.default\\.accept_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0005a]
category      = "ipv4"
check_name    = "ipv4 ip forwarding disabled"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.ip_forward = 0"
pattern       = "^net\\.ipv4\\.ip_forward\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0006a]
category      = "ipv4"
check_name    = "ipv4 packet redirect sending disabled (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.all.send_redirects = 0"
pattern       = "^net\\.ipv4\\.conf\\.all\\.send_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0007a]
category      = "ipv4"
check_name    = "ipv4 packet redirect sending disabled (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.default.send_redirects = 0"
pattern       = "^net\\.ipv4\\.conf\\.default\\.send_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0008a]
category      = "ipv4"
check_name    = "ipv4 reverse path filtering enabled (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.all.rp_filter = 1"
pattern       = "^net\\.ipv4\\.conf\\.all\\.rp_filter\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0009a]
category      = "ipv4"
check_name    = "ipv4 reverse path filtering enabled (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.default.rp_filter = 1"
pattern       = "^net\\.ipv4\\.conf\\.default\\.rp_filter\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0010a]
category      = "ipv4"
check_name    = "ipv4 secure icmp redirects not accepted (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.all.secure_redirects = 0"
pattern       = "^net\\.ipv4\\.conf\\.all\\.secure_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0011a]
category      = "ipv4"
check_name    = "ipv4 secure icmp redirects not accepted (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.default.secure_redirects = 0"
pattern       = "^net\\.ipv4\\.conf\\.default\\.secure_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0012a]
category      = "ipv4"
check_name    = "ipv4 source routed packets not accepted (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.all.accept_source_route = 0"
pattern       = "^net\\.ipv4\\.conf\\.all\\.accept_source_route\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0013a]
category      = "ipv4"
check_name    = "ipv4 source routed packets not accepted (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.default.accept_source_route = 0"
pattern       = "^net\\.ipv4\\.conf\\.default\\.accept_source_route\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0014a]
category      = "ipv4"
check_name    = "ipv4 suspicious packets logged (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.all.log_martians = 1"
pattern       = "^net\\.ipv4\\.conf\\.all\\.log_martians\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0015a]
category      = "ipv4"
check_name    = "ipv4 suspicious packets logged (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.conf.default.log_martians = 1"
pattern       = "^net\\.ipv4\\.conf\\.default\\.log_martians\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv4.0016a]
category      = "ipv4"
check_name    = "ipv4 tcp syn cookies enabled"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv4.tcp_syncookies = 1"
pattern       = "^net\\.ipv4\\.tcp_syncookies\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6]
[ipv6.0001a]
category      = "ipv6"
check_name    = "ipv6 icmp redirects not accepted (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv6.conf.all.accept_redirects = 0"
pattern       = "^net\\.ipv6\\.conf\\.all\\.accept_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6.0002a]
category      = "ipv6"
check_name    = "ipv6 icmp redirects not accepted (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv6.conf.default.accept_redirects = 0"
pattern       = "^net\\.ipv6\\.conf\\.default\\.accept_redirects\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6.0003a]
category      = "ipv6"
check_name    = "ipv6 ip forwarding disabled"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv6.conf.all.forwarding = 0"
pattern       = "^net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6.0004a]
category       = "ipv6"
check_name     = "ipv6 router advertisements not accepted (all)"
check_skip     = false
check_subtype  = "sysctl"
check_type     = "regex"
file_extension = ".conf"
ignore_case    = true
multi_line     = false
parameter      = "net.ipv6.conf.all.accept_ra = 0"
pattern        = "^net\\.ipv6\\.conf\\.all\\.accept_ra\\s*=\\s*0\\s*$"
pattern_match  = true
valid_os       = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6.0005a]
category      = "ipv6"
check_name    = "ipv6 router advertisements not accepted (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv6.conf.default.accept_ra = 0"
pattern       = "^net\\.ipv6\\.conf\\.default\\.accept_ra\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6.0006a]
category      = "ipv6"
check_name    = "ipv6 source routed packets not accepted (all)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv6.conf.all.accept_source_route = 0"
pattern       = "^net\\.ipv6\\.conf\\.all\\.accept_source_route\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[ipv6.0007a]
category      = "ipv6"
check_name    = "ipv6 source routed packets not accepted (default)"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "net.ipv6.conf.default.accept_source_route = 0"
pattern       = "^net\\.ipv6\\.conf\\.default\\.accept_source_route\\s*=\\s*0\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald]
[journald.0001a]
category          = "journald"
check_name        = "systemd journal remote package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "systemd-journal-remote"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald.0002a]
category    = "journald"
check_name  = "systemd journald service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "systemd-journald.service"
unit_state  = "static"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald.0003a]
category    = "journald"
check_name  = "systemd journal remote service"
check_skip  = false
check_type  = "unit"
unit_active = false
unit_loaded = false
unit_name   = "systemd-journal-remote.service"
unit_state  = "masked"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald.0004a]
category    = "journald"
check_name  = "systemd journal upload service"
check_skip  = false
check_type  = "unit"
unit_active = false
unit_loaded = false
unit_name   = "systemd-journal-upload.service"
unit_state  = "masked"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald.0005a]
category    = "journald"
check_name  = "systemd journald service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/systemd-journald.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald.0006a]
category    = "journald"
check_name  = "systemd journal remote service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/systemd-journal-remote.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[journald.0007a]
category    = "journald"
check_name  = "systemd journal upload service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/systemd-journal-upload.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[lftp]
[lftp.0001a]
category          = "lftp"
check_name        = "lftp package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "lftp"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[module]
[module.0001a]
category           = "module"
check_name         = "cramfs module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "cramfs"
module_path        = "fs/cramfs"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0002a]
category           = "module"
check_name         = "dccp module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "dccp"
module_path        = "net/dccp"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0003a]
category           = "module"
check_name         = "freevxfs module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "freevxfs"
module_path        = "fs/freevxfs"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0004a]
category           = "module"
check_name         = "hfs module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "hfs"
module_path        = "fs/hfs"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0005a]
category           = "module"
check_name         = "hfsplus module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "hfsplus"
module_path        = "fs/hfsplus"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0006a]
category           = "module"
check_name         = "jffs2 module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "jffs2"
module_path        = "fs/jffs2"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0007a]
category           = "module"
check_name         = "rds module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "rds"
module_path        = "net/rds"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0008a]
category           = "module"
check_name         = "sctp module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "sctp"
module_path        = "net/sctp"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0009a]
category           = "module"
check_name         = "squashfs module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "squashfs"
module_path        = "fs/squashfs"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0010a]
category           = "module"
check_name         = "tipc module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "tipc"
module_path        = "net/tipc"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0011a]
category           = "module"
check_name         = "udf module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "udf"
module_path        = "fs/udf"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.0012a]
category           = "module"
check_name         = "usb-storage module"
check_skip         = false
check_type         = "module"
module_blacklisted = true
module_denied      = false
module_loadable    = false
module_loaded      = false
module_name        = "usb-storage"
module_path        = "drivers/usb/storage"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.001333333333333a]
category           = "module"
check_name         = "xt_CT (TESTING)"
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "xt_CT"
module_path        = "net/netfilter"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[module.001333333333333b]
category           = "module"
check_name         = "amd76x_edac (TESTING)"
check_type         = "module"
module_blacklisted = true
module_denied      = true
module_loadable    = false
module_loaded      = false
module_name        = "amd76x_edac"
module_path        = "net/netfilter"
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount]
[mount.0001a]
category           = "mount"
check_name         = "/dev/shm mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "noexec", "nosuid"]
path               = "/dev/shm"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount.0002a]
category           = "mount"
check_name         = "/home mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "nosuid"]
path               = "/home"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount.0003a]
category           = "mount"
check_name         = "/tmp mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "noexec", "nosuid"]
path               = "/tmp"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount.0004a]
category           = "mount"
check_name         = "/var mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "nosuid"]
path               = "/var"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount.0005a]
category           = "mount"
check_name         = "/var/log mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "noexec", "nosuid"]
path               = "/var/log"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount.0006a]
category           = "mount"
check_name         = "/var/log/audit mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "noexec", "nosuid"]
path               = "/var/log/audit"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mount.0007a]
category           = "mount"
check_name         = "/var/tmp mount"
check_skip         = false
check_type         = "mount"
mount_boot         = true
mount_exists       = true
mount_options      = ["nodev", "noexec", "nosuid"]
path               = "/var/tmp"
separate_partition = true
valid_os           = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mta]
[mta.0001a]
category      = "mta"
check_name    = "ipv4 local-only configured"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/proc/net/tcp"
pattern       = "^0100007F:0019"
pattern_match = false
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[mta.0002a]
category      = "mta"
check_name    = "ipv6 local-only configured"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/proc/net/tcp6"
pattern       = "^00000000000000000000000001000000:0019"
pattern_match = false
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[nfs]
[nfs.0001a]
category          = "nfs"
check_name        = "nfs-utils package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "nfs-utils"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[nfs.0002a]
category   = "nfs"
check_name = "nfs server service"
check_skip = false
check_type = "unit"
# service_active  = false
# service_enabled = false
# service_masked  = true
service_name = "nfs-server.service"
unit_active  = false
unit_loaded  = false
valid_os     = ["amzn-2023", "ubuntu-22.04"]

[nfs.0003a]
category    = "nfs"
check_name  = "nfs server service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/nfs-server.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[nftables]
[nftables.0001a]
category          = "nftables"
check_name        = "nftables package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "nftables"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[nftables.0002a]
category    = "nftables"
check_name  = "nftables service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "nftables.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[nftables.0003a]
category    = "nftables"
check_name  = "nftables service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/nftables.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[nginx]
[nginx.0001a]
category          = "nginx"
check_name        = "nginx package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "nginx"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[openldap]
[openldap.0001a]
category          = "openldap"
check_name        = "openldap-clients package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "openldap-clients"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[parameters]
[parameters.0001a]
category      = "parameter"
check_name    = "address space layout randomization enabled"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "kernel.randomize_va_space = 2"
pattern       = "^kernel\\.randomize_va_space\\s*=\\s*2\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[parameters.0002a]
category      = "parameter"
check_name    = "ptrace_scope restricted"
check_skip    = false
check_subtype = "sysctl"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
parameter     = "kernel.yama.ptrace_scope = 1"
pattern       = "^kernel\\.yama\\.ptrace_scope\\s*=\\s*1\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam]
[pam.0001a]
category      = "pam"
check_name    = "password age warning login.defs"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/login.defs"
pattern       = "^PASS_WARN_AGE\\s+7$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0002a]
category      = "pam"
check_name    = "password class 1"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/security/pwquality.conf"
pattern       = "^minclass\\s*=\\s*4$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0003a]
category      = "pam"
check_name    = "password class 2"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/security/pwquality.conf"
pattern       = "^[duol]credit\\s*=\\s*-1$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0004a]
category      = "pam"
check_name    = "password hashing libuser.conf"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/libuser.conf"
pattern       = "^crypt_style\\s*=\\s*(sha512|yescrypt)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0005a]
category      = "pam"
check_name    = "password hashing login.defs"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/login.defs"
pattern       = "^ENCRYPT_METHOD\\s+(SHA512|YESCRYPT)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0006a]
category      = "pam"
check_name    = "password hashing password-auth"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/password-auth"
pattern       = ""
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0007a]
category      = "pam"
check_name    = "password hashing system-auth"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/system-auth"
pattern       = ""
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0008a]
category      = "pam"
check_name    = "password history password-auth 1"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/password-auth"
pattern       = "^password\\s+requisite\\s+pam_pwhistory\\.so\\b.*\\bremember=5\\b.*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0009a]
category      = "pam"
check_name    = "password history password-auth 2"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/password-auth"
pattern       = "^password\\s+required\\s+pam_unix\\.so\\b.*\\bremember=5\\b.*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0010a]
category      = "pam"
check_name    = "password history system-auth 1"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/system-auth"
pattern       = "^password\\s+requisite\\s+pam_pwhistory\\.so\\b.*\\bremember=5\\b.*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0011a]
category      = "pam"
check_name    = "password history system-auth 2"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/system-auth"
pattern       = "^password\\s+required\\s+pam_unix\\.so\\b.*\\bremember=5\\b.*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0012a]
category      = "pam"
check_name    = "password length"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/security/pwquality.conf"
pattern       = "^minlen\\s*=\\s*14$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0013a]
category      = "pam"
check_name    = "password lockout tries"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/security/faillock.conf"
pattern       = "^deny\\s*=\\s*(0|[6-9]|[1-9][0-9]*)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0014a]
category      = "pam"
check_name    = "password max age login.defs"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/login.defs"
pattern       = "^PASS_MAX_DAYS\\s+365$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0015a]
category      = "pam"
check_name    = "password min age login.defs"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/login.defs"
pattern       = "^PASS_MIN_DAYS\\s+1$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0016a]
category      = "pam"
check_name    = "password quality password-auth"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/password-auth"
pattern       = "^password\\s+requisite\\s+pam_pwquality\\.so\\b.*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0017a]
category      = "pam"
check_name    = "password quality system-auth"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/system-auth"
pattern       = "^password\\s+requisite\\s+pam_pwquality\\.so\\b.*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0018a]
category      = "pam"
check_name    = "password unlock time"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/security/faillock.conf"
pattern       = "^unlock_time\\s*=\\s*(0|[9-9][0-9]{2,}|[1-9][0-9]{3,})$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[pam.0019a]
category      = "pam"
check_name    = "su command restriced"
check_skip    = false
check_type    = "regex"
ignore_case   = true
multi_line    = false
path          = "/etc/pam.d/su"
pattern       = "^(.*\b(use_uid\b|group=\\S+)\b.*)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[postfix]
[postfix.0001a]
category          = "postfix"
check_name        = "postfix package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "postfix"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rpcbind]
[rpcbind.0001a]
category          = "rpcbind"
check_name        = "rpcbind package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "rpcbind"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[rpcbind.0002a]
category        = "rpcbind"
check_name      = "rpcbind service"
check_skip      = false
check_type      = "service"
service_active  = false
service_enabled = false
service_masked  = true
service_name    = "rpcbind.service"
valid_os        = ["amzn-2023", "ubuntu-22.04"]

[rpcbind.0003a]
category        = "rpcbind"
check_name      = "rpcbind socket"
check_skip      = false
check_type      = "service"
service_active  = false
service_enabled = false
service_masked  = true
service_name    = "rpcbind.socket"
valid_os        = ["amzn-2023", "ubuntu-22.04"]

[rpcbind.0004a]
category    = "rpcbind"
check_name  = "rpcbind service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/rpcbind.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rpcbind.0005a]
category    = "rpcbind"
check_name  = "rpcbind socket file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/rpcbind.socket"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rsync]
[rsync.0001a]
category          = "rsync"
check_name        = "rsync-daemon package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "rsync-daemon"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[rsync.0002a]
category     = "rsync"
check_name   = "rsyncd service"
check_skip   = false
check_type   = "unit"
service_name = "rsyncd"
unit_active  = false
unit_loaded  = false
valid_os     = ["amzn-2023", "ubuntu-22.04"]

[rsync.0003a]
category    = "rsync"
check_name  = "rsyncd service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/rsyncd.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rsyslog]
[rsyslog.0001a]
category          = "rsyslog"
check_name        = "rsyslog package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "rsyslog"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rsyslog.0002a]
category    = "rsyslog"
check_name  = "rsyslog service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "rsyslog.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rsyslog.0003a]
category    = "rsyslog"
check_name  = "rsyslog service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/rsyslog.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[rsyslog.0004a]
category    = "rsyslog"
check_name  = "rsyslog.conf file"
check_skip  = false
check_type  = "path"
path        = "/etc/rsyslog.conf"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[samba]
[samba.0001a]
category          = "samba"
check_name        = "samba package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "samba"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[shell]
[shell.0001a]
category      = "shell"
check_name    = "user shell timeout"                                       # TODO
check_skip    = false
check_subtype = "shell"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*TMOUT=(\\d+)"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[selinux]
[selinux.0001a]
category          = "selinux"
check_name        = "libselinux package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "libselinux"
valid_os          = ["amzn-2023", "fedora-40"]

[selinux.0002a]
category          = "selinux"
check_name        = "mcstrans package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "mcstrans"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[selinux.0003a]
category      = "selinux"
check_name    = "selinux enabled"
check_skip    = false
check_subtype = "selinux"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^SELINUX=(enforcing|permissive)\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40"]

[selinux.0004a]
category      = "selinux"
check_name    = "selinux mode is enforcing"
check_skip    = false
check_subtype = "selinux"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^SELINUX=enforcing\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40"]

[selinux.0005a]
category      = "selinux"
check_name    = "selinux policy configured"
check_subtype = "selinux"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^SELINUXTYPE=targeted\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40"]

[selinux.0006a]
category      = "selinux"
check_name    = "selinux enabled on boot"
check_skip    = false
check_subtype = "selinux"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "\b(selinux|enforcing)=0\b"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40"]

[sendmail]
[sendmail.0001a]
category          = "sendmail"
check_name        = "sendmail package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "sendmail"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[snmp]
[snmp.0001a]
category          = "snmp"
check_name        = "net-snmp package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "net-snmp"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[snmp.0002a]
category        = "snmp"
check_name      = "snmpd"
check_skip      = false
check_type      = "service"
service_active  = false
service_enabled = false
service_masked  = true
service_name    = "snmpd"
valid_os        = ["ubuntu-22.04"]

[snmp.0003a]
category    = "snmp"
check_name  = "snmpd service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/snmpd.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[squid]
[squid.0001a]
category          = "squid"
check_name        = "squid package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "squid"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[ssh]
[ssh.0001a]
category          = "ssh"
check_name        = "openssh package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "openssh"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd]
[sshd.0001a]
category          = "sshd"
check_name        = "openssh-server package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "openssh-server"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0002a]
category    = "sshd"
check_name  = "sshd service"
check_skip  = false
check_type  = "unit"
unit_active = true
unit_loaded = true
unit_name   = "sshd.service"
unit_state  = "enabled"
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0003a]
category    = "sshd"
check_name  = "sshd service file"
check_skip  = false
check_type  = "path"
path        = "/etc/systemd/system/sshd.service"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0004a]
category    = "sshd"
check_name  = "/etc/ssh/sshd_config"
check_skip  = false
check_type  = "path"
path        = "/etc/ssh/sshd_config"
path_exists = true
permissions = [0, 0, 600]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0005a]
category             = "sshd"
check_name           = "private host key files"
check_skip           = false
check_subtype        = "private"
check_type           = "ssh-keys"
expected_gid         = 0
expected_permissions = 600
expected_uid         = 0
path                 = "/etc/ssh"
valid_os             = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0006a]
category             = "sshd"
check_name           = "public host key files"
check_skip           = false
check_subtype        = "public"
check_type           = "ssh-keys"
expected_gid         = 0
expected_permissions = 644
expected_uid         = 0
path                 = "/etc/ssh"
valid_os             = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0007a]
category      = "sshd"
check_name    = "access limited"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*(allowusers|allowgroups|denyusers|denygroups)\\s+.+$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0008a]
category      = "sshd"
check_name    = "allowtcpforwarded disabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*AllowTcpForwarding\\s+no"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0009a]
category      = "sshd"
check_name    = "clientalivecountmax less than 10"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*ClientAliveCountMax\\s+[3-9]$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0010a]
category      = "sshd"
check_name    = "clientaliveinterval 60 secs or less"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*ClientAliveInterval\\s+([1-9]|[12][0-9]|30)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0011a]
category      = "sshd"
check_name    = "system-wide crypto policy not overridden"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\sCRYPTO_POLICY="
pattern_match = false
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0012a]
category      = "sshd"
check_name    = "hostbasedauthentication disabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*HostbasedAuthentication\\s+no"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0013a]
category      = "sshd"
check_name    = "ignorerhosts enabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*IgnoreRhosts\\s+yes"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0014a]
category      = "sshd"
check_name    = "logingracetime 60 secs or less"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*LoginGraceTime\\s+(1[6-9]|[2-5][0-9]|60)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0015a]
category      = "sshd"
check_name    = "loglevel configured"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*LogLevel\\s+(VERBOSE|INFO)"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0016a]
category      = "sshd"
check_name    = "maxauthtries 4 of less"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*MaxAuthTries\\s+[2-4]$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0017a]
category      = "sshd"
check_name    = "maxsessions 10 or less"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*MaxSessions\\s+([1-9]|10)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0018a]
category      = "sshd"
check_name    = "maxstartups configured"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*MaxStartups\\s+10:([0-2]?[0-9]|30):([0-5]?[0-9]|60)$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0019a]
category      = "sshd"
check_name    = "pam enabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*UsePAM\\s+yes"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0020a]
category      = "sshd"
check_name    = "permitemptypasswords disabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*PermitEmptyPasswords\\s+no"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0021a]
category      = "sshd"
check_name    = "permitrootlogin disabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*PermitRootLogin\\s+no"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0022a]
category      = "sshd"
check_name    = "permituserenvironment disabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*PermitUserEnvironment\\s+no"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0023a]
category      = "sshd"
check_name    = "warning banner configured"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = ""                                                         # TODO
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sshd.0024a]
category      = "sshd"
check_name    = "x11 forwarding disabled"
check_skip    = false
check_subtype = "sshd"
check_type    = "regex"
file_ext      = ".conf"
ignore_case   = true
multi_line    = false
pattern       = "^\\s*X11Forwarding\\s+no"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sudo]
[sudo.0001a]
category          = "sudo"
check_name        = "sudo package"
check_skip        = false
check_type        = "package"
package_installed = true
package_name      = "sudo"
valid_os          = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sudo.0002a]
category      = "sudo"
check_name    = "auth timeout"
check_skip    = false
check_subtype = "sudo"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^Defaults\\s+timestamp_timeout=15\\s*$"                   # TODO Fix this
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sudo.0003a]
category      = "sudo"
check_name    = "log file"
check_skip    = false
check_subtype = "sudo"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^Defaults\\s+logfile=\"/var/log/sudo.log\"\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sudo.0004a]
category      = "sudo"
check_name    = "reauthentication globally enabled"
check_skip    = false
check_subtype = "sudo"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^[^#]*!authenticate"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[sudo.0005a]
category      = "sudo"
check_name    = "use pty enabled"
check_skip    = false
check_subtype = "sudo"
check_type    = "regex"
ignore_case   = true
multi_line    = false
pattern       = "^Defaults\\s+use_pty\\s*$"
pattern_match = true
valid_os      = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system]
[system.0001a]
category    = "system"
check_name  = "/group file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/group"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0002a]
category    = "system"
check_name  = "group- file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/group-"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0003a]
category    = "system"
check_name  = "gshadow file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/gshadow"
path_exists = true
permissions = [0, 0, 0]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0004a]
category    = "system"
check_name  = "gshadow- file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/gshadow-"
path_exists = true
permissions = [0, 0, 0]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0005a]
category    = "system"
check_name  = "passwd file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/passwd"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0006a]
category    = "system"
check_name  = "passwd- file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/passwd-"
path_exists = true
permissions = [0, 0, 644]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0007a]
category    = "system"
check_name  = "shadow file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/shadow"
path_exists = true
permissions = [0, 0, 0]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0008a]
category    = "system"
check_name  = "shadow- file permissions"
check_skip  = false
check_type  = "path"
path        = "/etc/shadow-"
path_exists = true
permissions = [0, 0, 0]
valid_os    = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[system.0009a]
category   = "system"
check_name = "unconfined services"                         # TODO
check_skip = false
check_type = "unconfined-services"
valid_os   = ["amzn-2023", "ubuntu-22.04", "ubuntu-24.04"]

[system.0010a]
category   = "system"
check_name = "system reboot required"                                   # TODO
check_skip = false
check_type = "command"
command    = "needs-restarting -r"
pattern    = "^(?!.*0 upgraded).*"
valid_os   = ["amzn-2023", "fedora-40", "ubuntu-22.04", "ubuntu-24.04"]

[telnet]
[telnet.0001a]
category          = "telnet"
check_name        = "telnet package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "telnet"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[telnet.0002a]
category          = "telnet"
check_name        = "telnet-server package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "telnet-server"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[vsftpd]
[vsftpd.0001a]
category          = "vsftpd"
check_name        = "vsftpd package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "vsftpd"
valid_os          = ["amzn-2023", "ubuntu-22.04"]

[x11]
[x11.0001a]
category          = "x11"
check_name        = "xorg-x11-server-common package"
check_skip        = false
check_type        = "package"
package_installed = false
package_name      = "xorg-x11-server-common"
valid_os          = ["amzn-2023", "ubuntu-22.04"]
